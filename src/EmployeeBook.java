public class EmployeeBook {

    private Employee[] employee = new Employee[10];

    public EmployeeBook(Employee[] employee){
        for(Employee value : employee){
            if(value == null){
                this.employee = new Employee[] {value};
            }
        }
    }

//    private employee[0] = new Employee("Долгов Андрей Александрович", 1, 120_000);
//    private employee[1] = new Employee("Винтовой Станислав Алексеевич", 3, 50_000);
//    private employee[2] = new Employee("Лютых Александр Александрович", 1, 110_000);
//    private employee[3] = new Employee("Ивлев Павел Николаевич", 5, 140_000);
//    private employee[4] = new Employee("Максимов Сергей Анатольевич", 1, 120_000);
//    private employee[5] = new Employee("Шибаев Алексей Алексеевич", 3, 59_000);
//    private employee[6] = new Employee("Анисимов Аркадий Валерьвич", 4, 100_000);
//    private employee[7] = new Employee("Анисимов Константин Валерьевич", 4, 100_000);
//    private employee[8] = new Employee("Серьезный Семен Семенович", 2, 90_000);
//    private employee[9] = new Employee("Смоленцева Екатерина Александровна", 2, 90_000);

}

//Привести структуру проекта к ООП.
//Создать класс EmployeeBook;
//Перенести массив с сотрудниками в класс EmployeeBook, закрыть к нему доступ извне (сделать приватным);
//Все статические методы по работе с массивом перенести в этот класс и сделать не статическими;
//Добавить методы для управления внутренним массивом в EmployeeBook:
//Добавить нового сотрудника. (метод должен найти свободную ячейку в массиве и положить нового сотрудника в нее.
// Поиск свободных ячеек происходит с начала массива. Если свободных мест для сотрудника нет, то метод должен вернуть false,
// если для сотрудника нашлось место, то метод должен вернуть true)
//Удалить сотрудника (находим сотрудника по id, нуллим его ячейку в массиве);
//Добавить метод для получения сотрудника по id
//Инициализировать в методе main EmployeeBook и проверить корректность работы методов